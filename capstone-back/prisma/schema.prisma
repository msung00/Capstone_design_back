// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int     @id @default(autoincrement()) @map("user_id")
  kakaoId   String  @unique @map("kakao_id")
  nickName  String  @map("nick_name")
  name      String
  email     String  @unique
  phone     String  @unique
  school    String
  major     String
  admin     Boolean @default(false)
  studentId Int     @map("student_id")
  trades    Trade[] @relation("UserTrades")
  purchases Trade[] @relation("UserPurchases")

  Message Message[]

  Room Room[] @relation("UserRooms")
}

model Trade {
  tradeId  Int      @id @default(autoincrement()) @map("trade_id")
  title    String
  author   String
  price    Int
  sold     Boolean  @default(false)
  seller   User     @relation("UserTrades", fields: [sellerId], references: [userId])
  sellerId Int      @map("seller_id")
  buyer    User?    @relation("UserPurchases", fields: [buyerId], references: [userId])
  buyerId  Int?     @map("buyer_id")
  createAt DateTime @default(now()) @map("create_at")
  updateAt DateTime @updatedAt
  views    Int      @default(0)
}

model Club {
  clubId Int @id @default(autoincrement()) @map("club_id")
  name String
  location String
  description String
}

model Board {
  boardId Int @id @default(autoincrement()) @map("board_id")
  title String
  description String
  comment String
  views Int   @default(0)
}

model Room {
  roomId      Int       @id @default(autoincrement()) @map("room_id")
  name        String
  description String?
  createdAt   DateTime  @default(now()) @map("created_at")
  messages    Message[]
  users       User[]    @relation("UserRooms")
}

model Message {
  messageId   Int       @id @default(autoincrement()) @map("message_id")
  content     String
  timestamp   DateTime  @default(now()) @map("timestamp")
  roomId      Int
  senderId    Int
  room        Room      @relation(fields: [roomId], references: [roomId])
  sender      User      @relation(fields: [senderId], references: [userId])
}